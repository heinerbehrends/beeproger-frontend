import Head from 'next/head';
import { useEffect, useState } from 'react';
import AddItemForm from '../components/addItemForm';
import { AddButton } from '../components/buttonStyles';
import ShowEditItem from '../components/item';
import { Heading, Container, ItemsContainer } from '../components/pageStyles';
import ErrorMessage from '../components/ErrorMessage';

export type Item = {
  id: number;
  title: string;
  details: string;
  isDone: number;
  foto: string;
  created_at: string;
  updated_at: string;
};

export default function Home() {
  const [items, setItems] = useState<Item[] | null>(null);
  const [showAdd, setShowAdd] = useState(false);
  const [error, setError] = useState('');

  useEffect(() => {
    fetch('http://localhost/api/items')
      .then((response) => {
        if (response.status === 200) {
          return response.json();
        } else {
          throw new Error('There was a server error. Please try again later.');
        }
      })
      .then((items) => setItems(items))
      .catch((error) => setError(error.message));
    // refetch the data to undo opmitic ui updates on error
  }, [error]);
  return (
    <div>
      <Head>
        <title>BeepRoger App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Heading>Items</Heading>
      <Container>
        {error ? <ErrorMessage error={error} setError={setError} /> : null}
        <ItemsContainer>
          {items
            ? items.map((item) => (
                <ShowEditItem
                  key={item.id}
                  item={item}
                  items={items}
                  setItems={setItems}
                  setError={setError}
                />
              ))
            : null}
        </ItemsContainer>
        {showAdd ? (
          <AddItemForm
            items={items!}
            setItems={setItems}
            setShowAdd={setShowAdd}
            setError={setError}
          />
        ) : null}
        {showAdd ? null : <AddButton setShowAdd={setShowAdd} />}
      </Container>
    </div>
  );
}
